AWSTemplateFormatVersion: '2010-09-09'
Description: 'audit-logsender lambda'

Parameters:
  SourceCodeBucket:
    Description: 'Name of bucket containing source code of the lambda'
    Default: cwn-lambda-function-staging
    Type: String
  SourceCodeKey:
    Description: 'Name of item containing source code of the lambda'
    Default: lambda_function.py
    Type: String
  LambdaName:
    Description: 'Name of the lambda'
    Default: cwn-ec2-audit-logsender-STAGING_CFTEST
    Type: String
  Env:
    Description: 'Env'
    Default: Staging
    Type: String
 
  Role:
    Description: 'Role'
    Default: arn:aws:iam::902703094694:role/cwn-lambda-full
    Type: String
  
  ACCESS_TOKEN:
    Description: 'COMODO_ACCESS_TOKEN'
    Default: "f75fc10502e74b0aa491f236a233c430"
    Type: String

  LOG_COLLECTOR_ENDPOINT:
    Description: 'COMODO_LOG_COLLECTOR_ENDPOINT'
    Default: "https://api.mssp.comodo.com/collectionservice/eventlogcollector/upload"
    Type: String
  
  Log_Group:
    Description: 'CLOUDWATCH_LOG_GROUP'
    Default: "/var/log/cwn-auth"
    Type: String
     
Resources:
  lambda:
    Type: 'AWS::Lambda::Function'
    Properties:
        Code:
            S3Bucket: !Ref SourceCodeBucket
            S3Key: !Ref SourceCodeKey
        Description: 'Audit_Logsender_Lambda Project'
        Environment:
            Variables:
                COMODO_ACCESS_TOKEN: !Ref ACCESS_TOKEN 
                COMODO_LOG_COLLECTOR_END_POINT: !Ref LOG_COLLECTOR_ENDPOINT 
                
        FunctionName: !Ref LambdaName
        Handler: 'lambda_function.lambda_handler'
        Role: !Ref Role
        Runtime: 'Python 2.7'
        Timeout: 300

  cloudwatch logs:
    Type: "AWS::Logs::LogGroup"
    Properties: 
      LogGroupName: !Ref Log_Group
   
        

            
            
            
            
